extends toolbox

block content
   .container
      h2 Code

      h3 Intern work for Pitney Bowes Software
      p
         span.badge grails
         span.badge illustrator
         span.badge groovy
         span.badge java
         span.badge ajax
         span.badge google-maps
      p Implemented a GUI in the form of a Grails Application for Pitney Bowes' geocoder, GeoStan. Utilized the Google-Maps API to display GeoStan output along side Google output.
        //- Click the image to enlarge and then click anywhere to diminish.
      .row
         .col-md-2
            a(href="#", data-toggle='modal', data-target='#grails-geostan-01-home')
               img.thumbnail(src='/images/code/thumbs/grails-geostan-01-home.png', alt='Screenshot of the grails application I built for Pitney Bowes')
         .col-md-2
            a(href="#", data-toggle='modal', data-target='#grails-geostan-02-hampton')
               img.thumbnail(src='/images/code/thumbs/grails-geostan-02-hampton.png', alt='Screenshot of the grails application I built for Pitney Bowes')
         .col-md-2
            a(href="#", data-toggle='modal', data-target='#grails-geostan-03-reverse')
               img.thumbnail(src='/images/code/thumbs/grails-geostan-03-reverse.png', alt='Screenshot of the grails application I built for Pitney Bowes')
         .col-md-2
            a(href="#", data-toggle='modal', data-target='#grails-geostan-04-infobox')
               img.thumbnail(src='/images/code/thumbs/grails-geostan-04-infobox.png', alt='Screenshot of the grails application I built for Pitney Bowes')
         .col-md-2
            a(href="#", data-toggle='modal', data-target='#grails-geostan-05-intersection')
               img.thumbnail(src='/images/code/thumbs/grails-geostan-05-intersection.png', alt='Screenshot of the grails application I built for Pitney Bowes')
         .col-md-2
            a(href="#", data-toggle='modal', data-target='#grails-geostan-06-multimatch')
               img.thumbnail(src='/images/code/thumbs/grails-geostan-06-multimatch.png', alt='Screenshot of the grails application I built for Pitney Bowes')
         .col-md-2
            a(href="#", data-toggle='modal', data-target='#grails-geostan-07-drop-pins')
               img.thumbnail(src='/images/code/thumbs/grails-geostan-07-drop-pins.png', alt='Screenshot of the grails application I built for Pitney Bowes')

      h3 Class Work
      h4: a(href='http://www.queertionary.com/', target='_blank', rel='nofollow') Queertionary
      p
         span.badge node.js
         span.badge express.js
         span.badge mongodb
         span.badge less
         span.badge jade
         span.badge javascript
      p
        b Technology, Arts and Media Senior Thesis Project
        br
        | Created Rails Application to study the use of Queer Jargon. Utilized APIs, such as UrbanDictionary, Tumblr, Twitter, Wikipedia, and Instagram, to compare and contrast word uses.
        // <span class="help">Click the image to enlarge and then click anywhere to diminish.</span>

      h4: a(href='http://redwood.colorado.edu/vargasp/dm2/', target='_blank', rel='nofollow') Digital Media 2
      p
         span.badge processing
         span.badge java
      p
        | This class entailed learning the IDE Processing. Based on Java, this language encapsulated the nitty-gritty of the Java programming language, yet allowed for Java objects to be utilized. In addition, this language's main purpose was for fast and easy construction of graphic application.
        span.help Click the images to enlarge and find out more. Then click anywhere to diminish.
      .row
         .col-md-2
            a(href="#", data-toggle='modal', data-target='#processing-portrait')
               img.thumbnail(src='/images/code/thumbs/processing-portrait.gif', alt='Gif of my Conceptual Self-Portrait')
         .col-md-2
            a(href="#", data-toggle='modal', data-target='#processing-generative-art')
               img.thumbnail(src='/images/code/thumbs/processing-generative-art.gif', alt='Gif of my Generative Art Project')
         .col-md-2
            a(href="#", data-toggle='modal', data-target='#processing-new-life-form')
               img.thumbnail(src='/images/code/thumbs/processing-new-life-form.gif', alt='Gif of an Animation')
         .col-md-2
            a(href="#", data-toggle='modal', data-target='#processing-video')
               img.thumbnail(src='/images/code/thumbs/processing-video.gif', alt='Gif of my Final Project, Acrylic Video')

   // Modals
   #grails-geostan-01-home.modal.fade(tabindex='-1', role='dialog', aria-labelledby='grails-geostan-01-home')
      .modal-dialog.modal-lg(role='document')
         .modal-content
            .modal-header
               button.close(type='button', data-dismiss='modal', aria-label='Close')
                  span(aria-hidden='true') ×
               h4.modal-title PB GeoStan &sect; Homepage
            .modal-body.row
               img.col-md-9(src='/images/code/grails-geostan-01-home.png', alt='PB GeoStan &sect; Homepage')
               .col-md-3
                  p.small 2014-01
                  p Created a grails application to showcase Pitney Bowes' geocoder, GeoStan.
                  p Here we see the homepage. Users can search for an address or point using the search bar.

   #grails-geostan-02-hampton.modal.fade(tabindex='-1', role='dialog', aria-labelledby='grails-geostan-02-hampton')
      .modal-dialog.modal-lg(role='document')
         .modal-content
            .modal-header
               button.close(type='button', data-dismiss='modal', aria-label='Close')
                  span(aria-hidden='true') ×
               h4.modal-title PB GeoStan &sect; Interpretation
            .modal-body.row
               img.col-md-9(src='/images/code/grails-geostan-02-hampton.png', alt='PB GeoStan &sect; Interpretation')
               .col-md-3
                  p.small 2014-01
                  p Created a grails application to showcase Pitney Bowes' geocoder, GeoStan.
                  p This location shows the results between Pitney Bowes' geocoder and Google's geocoder. Which result do you think is more correct based on what the user put in?

   #grails-geostan-03-reverse.modal.fade(tabindex='-1', role='dialog', aria-labelledby='grails-geostan-03-reverse')
      .modal-dialog.modal-lg(role='document')
         .modal-content
            .modal-header
               button.close(type='button', data-dismiss='modal', aria-label='Close')
                  span(aria-hidden='true') ×
               h4.modal-title PB GeoStan &sect; Reverse Geocoding
            .modal-body.row
               img.col-md-9(src='/images/code/grails-geostan-03-reverse.png', alt='PB GeoStan &sect; Reverse Geocoding')
               .col-md-3
                  p.small 2014-01
                  p Created a grails application to showcase Pitney Bowes' geocoder, GeoStan.
                  p The grails application has support for reverse geocoding. This means you can search for a latitude and longitude point and the geocoders will try an find the closest address.

   #grails-geostan-04-infobox.modal.fade(tabindex='-1', role='dialog', aria-labelledby='grails-geostan-04-infobox')
      .modal-dialog.modal-lg(role='document')
         .modal-content
            .modal-header
               button.close(type='button', data-dismiss='modal', aria-label='Close')
                  span(aria-hidden='true') ×
               h4.modal-title PB GeoStan &sect; Infoboxes
            .modal-body.row
               img.col-md-9(src='/images/code/grails-geostan-04-infobox.png', alt='PB GeoStan &sect; Infoboxes')
               .col-md-3
                  p.small 2014-01
                  p Created a grails application to showcase Pitney Bowes' geocoder, GeoStan.
                  p If a user hovers over any of the points, they can see the result in an info-box.

   #grails-geostan-05-intersection.modal.fade(tabindex='-1', role='dialog', aria-labelledby='grails-geostan-05-intersection')
      .modal-dialog.modal-lg(role='document')
         .modal-content
            .modal-header
               button.close(type='button', data-dismiss='modal', aria-label='Close')
                  span(aria-hidden='true') ×
               h4.modal-title PB GeoStan &sect; Intersections
            .modal-body.row
               img.col-md-9(src='/images/code/grails-geostan-05-intersection.png', alt='PB GeoStan &sect; Intersections')
               .col-md-3
                  p.small 2014-01
                  p Created a grails application to showcase Pitney Bowes' geocoder, GeoStan.
                  p There is support for intersections. Here, GeoStan found two possible matches for the user input while Google picked a result for the user. Which result do you think is more correct?

   #grails-geostan-06-multimatch.modal.fade(tabindex='-1', role='dialog', aria-labelledby='grails-geostan-06-multimatch')
      .modal-dialog.modal-lg(role='document')
         .modal-content
            .modal-header
               button.close(type='button', data-dismiss='modal', aria-label='Close')
                  span(aria-hidden='true') ×
               h4.modal-title PB GeoStan &sect; Multi-matches
            .modal-body.row
               img.col-md-9(src='/images/code/grails-geostan-05-intersection.png', alt='PB GeoStan &sect; Multi-matches')
               .col-md-3
                  p.small 2014-01
                  p Created a grails application to showcase Pitney Bowes' geocoder, GeoStan.
                  p Here is a multi-match result. GeoStan found three possible results while Google picked one for the user. Which result do you think is more correct based on what the user put in?

   #grails-geostan-07-drop-pins.modal.fade(tabindex='-1', role='dialog', aria-labelledby='grails-geostan-07-drop-pins')
      .modal-dialog.modal-lg(role='document')
         .modal-content
            .modal-header
               button.close(type='button', data-dismiss='modal', aria-label='Close')
                  span(aria-hidden='true') ×
               h4.modal-title PB GeoStan &sect; Drop Pins
            .modal-body.row
               img.col-md-9(src='/images/code/grails-geostan-07-drop-pins.png', alt='PB GeoStan &sect; Drop Pins')
               .col-md-3
                  p.small 2014-01
                  p Created a grails application to showcase Pitney Bowes' geocoder, GeoStan.
                  p This grails application has support for dropping pins on the map. The user then can click any of the markers to run a reverse geocoder run.

   #processing-portrait.modal.fade(tabindex='-1', role='dialog', aria-labelledby='processing-portrait')
      .modal-dialog.modal-lg(role='document')
         .modal-content
            .modal-header
               button.close(type='button', data-dismiss='modal', aria-label='Close')
                  span(aria-hidden='true') ×
               h4.modal-title Conceptual Self Portrait
            .modal-body.row
               a(href='http://redwood.colorado.edu/vargasp/dm2/lab1/', alt='Conceptual Self Portrait')
                  img.col-md-9(src='/images/code/processing-portrait.gif', alt='Conceptual Self Portrait')
               .col-md-3
                  p.small 2013-09
                  p Developed an interactive, conceptual self-portrait.

   #processing-generative-art.modal.fade(tabindex='-1', role='dialog', aria-labelledby='processing-generative-art')
      .modal-dialog.modal-lg(role='document')
         .modal-content
            .modal-header
               button.close(type='button', data-dismiss='modal', aria-label='Close')
                  span(aria-hidden='true') ×
               h4.modal-title Generative Art
            .modal-body.row
               a(href='http://redwood.colorado.edu/vargasp/dm2/proj1/', alt='Generative Art')
                  img.col-md-9(src='/images/code/processing-generative-art.gif', alt='Generative Art')
               .col-md-3
                  p.small 2013-10
                  p Developed an interactive, piece of generative art. The project uses characters the user will type and draw them as a square and color.

   #processing-new-life-form.modal.fade(tabindex='-1', role='dialog', aria-labelledby='processing-new-life-form')
      .modal-dialog.modal-lg(role='document')
         .modal-content
            .modal-header
               button.close(type='button', data-dismiss='modal', aria-label='Close')
                  span(aria-hidden='true') ×
               h4.modal-title Organic Motion
            .modal-body.row
               a(href='http://redwood.colorado.edu/vargasp/dm2/lab6/', alt='Organic Motion')
                  img.col-md-9(src='/images/code/processing-new-life-form.gif', alt='Organic Motion')
               .col-md-3
                  p.small 2013-11
                  p Developed an animation of a new-life form.

   #processing-video.modal.fade(tabindex='-1', role='dialog', aria-labelledby='processing-video')
      .modal-dialog.modal-lg(role='document')
         .modal-content
            .modal-header
               button.close(type='button', data-dismiss='modal', aria-label='Close')
                  span(aria-hidden='true') ×
               h4.modal-title Acrylic Video
            .modal-body.row
               a(href='http://redwood.colorado.edu/vargasp/dm2/proj3/', alt='Acrylic Video')
                  img.col-md-9(src='/images/code/processing-video.gif', alt='Acrylic Video')
               .col-md-3
                  p.small 2013-12
                  p For the final project I chose to do some video manipulation. I really like the look acrylic makes when stacked on top of each other, creating another image. Video clips from BBC Motion Gallery.<br><br>I interlaced video clips with stock footage to make a mosaic of interesting images. The main reason for this program was to explore video manipulation. I really enjoyed the bit mashing of the different images and found some really interesting techniques along the way.


